"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1221],{1848:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return c}});var a=t(7462),i=t(3366),s=(t(7294),t(3905)),r=t(5710),l=["components"],o={sidebar_position:2},u="Example Execution Plan",d={unversionedId:"indexer/example_plan",id:"indexer/example_plan",title:"Example Execution Plan",description:"Here is an example of an execution plan. Notably, this is the default plan that will be used",source:"@site/docs/indexer/example_plan.mdx",sourceDirName:"indexer",slug:"/indexer/example_plan",permalink:"/carp/docs/indexer/example_plan",draft:!1,editUrl:"https://github.com/dcSpark/carp/docs/indexer/example_plan.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/carp/docs/indexer/intro"},next:{title:"Running",permalink:"/carp/docs/indexer/run"}},p={},c=[],k={toc:c};function f(e){var n=e.components,o=(0,i.Z)(e,l);return(0,s.kt)("wrapper",(0,a.Z)({},k,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"example-execution-plan"},"Example Execution Plan"),(0,s.kt)("p",null,"Here is an example of an execution plan. Notably, this is the default plan that will be used"),(0,s.kt)(r.Z,{language:"toml",title:"/indexer/execution_plans/default.toml",showLineNumbers:!0,mdxType:"CodeBlock"},"# This file defines which tasks are used when parsing blocks\n# Creating your own execution plan with the tasks you need for your application\n# Format follows the TOML format: https://toml.io/en/\n\n# Note: the order you specify tasks in this file matters\n#       ex: if task Foo depends on task Bar, place Bar first in the list\n\n# You can find task the task name by looking at the TASK_NAME field inside the task\n# Some tasks may allow extra parameters that you can specify in this file\n\n[GenesisBlockTask]\n\n[GenesisTransactionTask]\n\n[ByronBlockTask]\nreadonly=false\n\n[ByronTransactionTask]\nreadonly=false\n\n[ByronAddressTask]\n\n[ByronOutputTask]\n\n[ByronInputTask]\n\n[MultieraBlockTask]\nreadonly=false\n\n[MultieraTransactionTask]\nreadonly=false\n\n[MultieraMetadataTask]\nreadonly=false\n\n[MultieraAddressTask]\n\n[MultieraOutputTask]\nreadonly=false\n\n[MultieraUsedInputTask]\nreadonly=false\n\n[MultieraUnusedInputTask]\n\n[MultieraStakeCredentialTask]\n\n[MultieraAddressCredentialRelationTask]\nreadonly=false\n\n[MultieraTxCredentialRelationTask]\n\n[MultieraAssetMintTask]\n\n[MultieraCip25EntryTask]\n"),(0,s.kt)("p",null,"Notably, this execution plan will generate the following execution graph"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"graph",src:t(6755).Z,width:"1381",height:"708"})),(0,s.kt)("p",null,"As you can see from the plan, there are many tasks that will run. Note that:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Tasks operate at the block level. This means that different block formats have different execution graphs"),(0,s.kt)("li",{parentName:"ul"},"Tasks run in parallel based on their dependency graph")),(0,s.kt)("p",null,"If you want to write your own task, you can find out how ",(0,s.kt)("a",{parentName:"p",href:"/carp/docs/indexer/add_task"},"here")),(0,s.kt)("p",null,"You can find a list of all existing tasks ",(0,s.kt)("a",{parentName:"p",href:"./Tasks"},"here")))}f.isMDXComponent=!0},6755:function(e,n,t){n.Z=t.p+"assets/images/default-6e47f2f699464848dddb8176b2699cd9.svg"}}]);